[tool.poetry]
name = "whence-jam-python"
version = "0.1.0"
description = "An app for tracking who recommended a song or album (CLI, Web, API)."
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [
  { include = "whencejam", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
flask = "^3.0"
sqlalchemy = "^2.0"
alembic = "^1.13"
python-dotenv = "^1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
black = "^24.4"
ruff = "^0.5.0"
isort = "^5.13"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

# Formatting and linting configuration
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.(py|pyi)$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
  | .mypy_cache
  | .ruff_cache
)
'''

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["src", "tests"]
known_first_party = ["whencejam"]

[tool.ruff]
target-version = "py311"
line-length = 88
src = ["src", "tests"]
extend-exclude = [
  ".venv",
  "build",
  "dist",
  "__pycache__"
]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "I",  # isort (import sorting)
  "UP"  # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["whencejam"]
lines-after-imports = 2
